#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

# Check if subdir path is defined
if ! [ -f $ENV_DIR/SWAP_SUBDIR_PATH ]; then
	echo "SWAP_SUBDIR_PATH is undefined"
	exit 1
fi

SWAP_SUBDIR_PATH=`cat $ENV_DIR/SWAP_SUBDIR_PATH`

# Check if target dir for swapped root is defined
if [ -f $ENV_DIR/SWAP_ROOT_APP_DIR ]; then
	SWAP_ROOT_APP_DIR=`cat $ENV_DIR/SWAP_ROOT_APP_DIR`
else
	echo "SWAP_ROOT_APP_DIR was not defined, defaulting to \"_root_\""
	SWAP_ROOT_APP_DIR=_root_
fi

SUB_DIR=$BUILD_DIR/$SWAP_SUBDIR_PATH

# Chec if swap source exists 
if ! [ -d $SUB_DIR ]; then
	echo "$SUB_DIR does not exist"
	exit 1
fi

echo "-----> Subdir buildpack in $SWAP_SUBDIR_PATH"

echo "       creating cache: $CACHE_DIR"
mkdir -p $CACHE_DIR
TMP_DIR=`mktemp -d $CACHE_DIR/subdirXXXXX`
echo "       created tmp dir: $TMP_DIR"

echo "       copying working dir: $SWAP_SUBDIR_PATH to $TMP_DIR"
cp -R $SUB_DIR/. $TMP_DIR/

echo "       moving root dir content to $SWAP_ROOT_APP_DIR"
mkdir $TMP_DIR/$SWAP_ROOT_APP_DIR
mv $BUILD_DIR/* $TMP_DIR/$SWAP_ROOT_APP_DIR

# At this point build dir should be already empty, if not this is not expected
# echo "       cleaning build dir $BUILD_DIR"
# rm -rf $BUILD_DIR/*

echo "       moving swapped content from cache $TMP_DIR to build dir $BUILD_DIR"
mv $TMP_DIR/* $BUILD_DIR/

echo "       cleaning tmp dir $TMP_DIR"
rm -rf $TMP_DIR

exit 0


